# for now we'll keep this last working one, but we'll do everything manually, it'll be faster
name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. Setup Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      # 3. (Опционально) Глобально устанавливаем Angular CLI
      - name: Install Angular CLI globally
        run: npm install -g @angular/cli@19.1.7

      # 4. Устанавливаем все зависимости (включая devDependencies)
      - name: Install dependencies
        run: npm ci --force

      # 5. Сборка Angular через npx
      - name: Build Angular app
        run: npx ng build --configuration production

      # 6. Логинимся в Docker Hub и пушим образ
      - name: Log in to Docker Hub
        run: |
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login \
            --username "${{ secrets.DOCKERHUB_USERNAME }}" \
            --password-stdin
      - name: Build Docker image
        run: docker build -t "${{ secrets.DOCKERHUB_USERNAME }}/ng-dotnet-ui:${{ github.sha }}" .
      - name: Push Docker image
        run: docker push "${{ secrets.DOCKERHUB_USERNAME }}/ng-dotnet-ui:${{ github.sha }}"

      # 7. Деплой на Firebase Hosting
      - name: Deploy to Firebase Hosting
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          # GitHub токен (чтобы action мог комментировать PR/канал)
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          # Секрет с JSON-ключом вашего сервисного аккаунта Firebase
          # Убедитесь, что в Settings → Secrets репо есть именно такой ключ
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_NG_DOTNET }}'
          # ID вашего Firebase-проекта
          projectId: ng-dotnet
          # Канал live для продакшена
          channelId: live
